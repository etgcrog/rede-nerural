# 1.This file shows the parsed IR info when graph evaluating failed to help find the problem.
# 2.You can search the last `------------------------>` to the node which is inferred failed.
# 3.Refer to https://www.mindspore.cn/search?inputValue=analyze_fail.dat to get more instructions.
# ===============================================================================

# [No.1] Default_wrapper.62
# In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:14/
funcgraph fg_62(
        %para1 : Tensor(U8)[28, 28, 1]    # x
        , %para2 : Ref[Tensor(F32)][512]    # dense_relu_sequential.0.bias
        , %para3 : Ref[Tensor(F32)][512, 784]    # dense_relu_sequential.0.weight
        , %para4 : Ref[Tensor(F32)][512]    # dense_relu_sequential.2.bias
        , %para5 : Ref[Tensor(F32)][512, 512]    # dense_relu_sequential.2.weight
        , %para6 : Ref[Tensor(F32)][10]    # dense_relu_sequential.4.bias
        , %para7 : Ref[Tensor(F32)][10, 512]    # dense_relu_sequential.4.weight
    ) {

#------------------------> 0
    %1 = FuncGraph::fg_63(%para1)    #(Tensor(U8)[28, 28, 1])    # fg_63=Default.63 #scope: Default
#[CNode]72
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:17/#[CNode]73
}
# order:
#   1: @Default_wrapper.62:[CNode]72{[0]: ValueNode<FuncGraph> Default.63, [1]: x}
#   2: @Default_wrapper.62:[CNode]73{[0]: ValueNode<Primitive> Return, [1]: [CNode]72}


# [No.2] Default.63
# In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:14/
funcgraph fg_63[fg_62](
        %para8 : Tensor(U8)[28, 28, 1]    # x
    ) {
    %1 : Tensor(U8)[28, 28] = FuncGraph::fg_74(%para8)    #(Tensor(U8)[28, 28, 1])    # fg_74=Flatten.74 #scope: Default
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:15/#x

#------------------------> 1
    %2 = FuncGraph::fg_64(%1)    #(Tensor(U8)[28, 28])    # fg_64=SequentialCell.64 #scope: Default
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:16/#logits
    Primitive::Return{prim_type=1}(%2)    #(Undefined) #scope: Default
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:17/#[CNode]75
}
# order:
#   1: @Default.63:x{[0]: ValueNode<FuncGraph> Flatten.74, [1]: x}
#   2: @Default.63:logits{[0]: ValueNode<FuncGraph> SequentialCell.64, [1]: x}
#   3: @Default.63:[CNode]75{[0]: ValueNode<Primitive> Return, [1]: logits}


# [No.3] SequentialCell.64
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:277/    def construct(self, input_data):/
funcgraph fg_64[fg_62](
        %para9 : Tensor(U8)[28, 28]    # input_data
    ) {

#------------------------> 2
    %1 = FuncGraph::fg_65(I64(0), %para9)    #(I64NoShape, Tensor(U8)[28, 28])    # fg_65=↵SequentialCell.65 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]76
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]77
}
# order:
#   1: @SequentialCell.64:[CNode]78{[0]: ValueNode<FuncGraph> ms_len.79, [1]: [CNode]80}
#   2: @SequentialCell.64:[CNode]76{[0]: ValueNode<FuncGraph> ↵SequentialCell.65, [1]: ValueNode<Int64Imm> 0, [2]: input_data}
#   3: @SequentialCell.64:[CNode]77{[0]: ValueNode<Primitive> Return, [1]: [CNode]76}


# [No.4] ↵SequentialCell.65
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/
funcgraph fg_65[fg_64](
        %para10 : I64NoShape    # @[CNode]66
        , %para11 : Tensor(U8)[28, 28]    # фinput_data
    ) {
    %1 : $(SequentialCell.64):Tuple[Func*5]TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape) = Primitive::MakeTuple{prim_type=1}(FuncGraph::fg_68, FuncGraph::fg_81, FuncGraph::fg_82, FuncGraph::fg_83, FuncGraph::fg_84)    #(FuncNoShape, FuncNoShape, FuncNoShape, FuncNoShape, FuncNoShape)    # fg_68=Dense.68, fg_81=ReLU.81, fg_82=Dense.82, fg_83=ReLU.83, fg_84=Dense.84 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]80
    %2 : $(SequentialCell.64):I64NoShape = FuncGraph::fg_79(%1)    #(Tuple[Func*5]TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape))    # fg_79=ms_len.79 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]78
    %3 : BoolNoShape = MultitypeFuncGraph::less{(Tensor, Tensor), (Number, Tensor), (Number, Number), (Tensor, Number), (String, String)}(%para10, %2)    #(I64NoShape, I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]85
    %4 : FuncNoShape = Primitive::Switch{prim_type=1}(%3, FuncGraph::fg_67, FuncGraph::fg_86)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_67=↻SequentialCell.67, fg_86=↓SequentialCell.86 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]87

#------------------------> 3
    %5 = %4() #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]88
    Primitive::Return{prim_type=1}(%5)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]89
}
# order:
#   1: @↵SequentialCell.65:[CNode]85{[0]: ValueNode<MultitypeFuncGraph> less.33, [1]: @[CNode]66, [2]: [CNode]78}
#   2: @↵SequentialCell.65:[CNode]87{[0]: ValueNode<Primitive> Switch, [1]: [CNode]85, [2]: ValueNode<FuncGraph> ↻SequentialCell.67, [3]: ValueNode<FuncGraph> ↓SequentialCell.86}
#   3: @↵SequentialCell.65:[CNode]88{[0]: [CNode]87}
#   4: @↵SequentialCell.65:[CNode]89{[0]: ValueNode<Primitive> Return, [1]: [CNode]88}


# [No.5] ↻SequentialCell.67
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/
funcgraph fg_67[fg_65](
) {
    %1 : I64NoShape = MultitypeFuncGraph::add{(Tensor, COOTensor), (Tensor, Tuple), (Tuple, Tensor), (Number, Tensor), (String, String), (RowTensor, Tensor), (List, Tensor), (Tensor, List), (List, List), (NoneType, NoneType), (Tensor, Tensor), (CSRTensor, CSRTensor), (Number, Number), (Tensor, Number), (Tuple, Tuple), (COOTensor, Tensor), (COOTensor, COOTensor)}(%para10, I64(1))    #(I64NoShape, I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]66
    %2 : I64NoShape = Primitive::stop_gradient{prim_type=1}(%1)    #(I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:16/#[CNode]90
    %3 : $(SequentialCell.64):Tuple[Func*5]TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape) = Primitive::MakeTuple{prim_type=1}(FuncGraph::fg_68, FuncGraph::fg_81, FuncGraph::fg_82, FuncGraph::fg_83, FuncGraph::fg_84)    #(FuncNoShape, FuncNoShape, FuncNoShape, FuncNoShape, FuncNoShape)    # fg_68=Dense.68, fg_81=ReLU.81, fg_82=Dense.82, fg_83=ReLU.83, fg_84=Dense.84 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]80
    %4 : FuncNoShape = DoSignaturePrimitive::S-Prim-getitem{prim_type=1}(%3, %para10)    #(Tuple[Func*5]TupleShape(NoShape, NoShape, NoShape, NoShape, NoShape), I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#cell

#------------------------> 4
    %5 = %4(%para11)    #(Tensor(U8)[28, 28]) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:279/            input_data = cell(input_data)/#input_data
    %6 = FuncGraph::fg_65(%1, %5)    #(I64NoShape, Undefined)    # fg_65=↵SequentialCell.65 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]91
    %7 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%6, %2)    #(Undefined, I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file C:\Users\eduardo.guimaraes\AppData\Local\Temp\ipykernel_10088\1664460195.py:16/#[CNode]92
    Primitive::Return{prim_type=1}(%7)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#[CNode]93
}
# order:
#   1: @↻SequentialCell.67:cell{[0]: ValueNode<DoSignaturePrimitive> S-Prim-getitem, [1]: [CNode]80, [2]: @[CNode]66}
#   2: @↻SequentialCell.67:[CNode]66{[0]: ValueNode<MultitypeFuncGraph> add.38, [1]: @[CNode]66, [2]: ValueNode<Int64Imm> 1}
#   3: @↻SequentialCell.67:input_data{[0]: cell, [1]: фinput_data}
#   4: @↻SequentialCell.67:[CNode]91{[0]: ValueNode<FuncGraph> ↵SequentialCell.65, [1]: [CNode]66, [2]: input_data}
#   5: @↻SequentialCell.67:[CNode]93{[0]: ValueNode<Primitive> Return, [1]: [CNode]92}


# [No.6] Dense.68
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:463/    def construct(self, x):/
funcgraph fg_68[fg_62](
        %para12 : Tensor(U8)[28, 28]    # x
    ) {

#------------------------> 5
    %1 = FuncGraph::fg_69(%para12, %para2, %para3)    #(Tensor(U8)[28, 28], Ref[Tensor(F32)][512], Ref[Tensor(F32)][512, 784])    # fg_69=L-Dense.69 #scope: Default
#[CNode]94
    Primitive::Return{prim_type=1}(%1)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#[CNode]95
}
# order:
#   1: @Dense.68:[CNode]94{[0]: ValueNode<FuncGraph> L-Dense.69, [1]: x, [2]: dense_relu_sequential.0.bias, [3]: dense_relu_sequential.0.weight}
#   2: @Dense.68:[CNode]95{[0]: ValueNode<Primitive> Return, [1]: [CNode]94}


# [No.7] L-Dense.69
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:463/    def construct(self, x):/
funcgraph fg_69(
        %para13 : Tensor(U8)[28, 28]    # x
        , %para14 : Ref[Tensor(F32)][512]    # L-dense_relu_sequential.0.bias
        , %para15 : Ref[Tensor(F32)][512, 784]    # L-dense_relu_sequential.0.weight
    ) {
    %1 : Tuple[I64*2]TupleShape(NoShape, NoShape) = DoSignaturePrimitive::S-Prim-Shape{prim_type=1}(%para13)    #(Tensor(U8)[28, 28]) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:473/        if len(x_shape) != 2:/#фx_shape
    %2 : NoneTypeNoShape = DoSignaturePrimitive::S-Prim-check_dense_input_shape{prim_type=1}(%1, "Dense")    #(Tuple[I64*2]TupleShape(NoShape, NoShape), StringNoShape) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:465/        check_dense_input_shape(x_shape, self.cls_name)/#96
    %3 : NoneTypeNoShape = Primitive::stop_gradient{prim_type=1}(%2)    #(NoneTypeNoShape) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#97
    %4 : I64NoShape = FuncGraph::fg_98(%1)    #(Tuple[I64*2]TupleShape(NoShape, NoShape))    # fg_98=L-ms_len.98 #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#99
    %5 : BoolNoShape = DoSignaturePrimitive::S-Prim-not_equal{prim_type=1}(%4, I64(2))    #(I64NoShape, I64NoShape) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#100
    %6 : BoolNoShape = FuncGraph::fg_101(%5)    #(BoolNoShape)    # fg_101=L-bool_.101 #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#102
    %7 : FuncNoShape = Primitive::Switch{prim_type=1}(%6, FuncGraph::fg_103, FuncGraph::fg_104)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_103=L-✓Dense.103, fg_104=L-✗Dense.104 #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#105
    %8 : Tensor(U8)[28, 28] = %7() #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#106

#------------------------> 6
    %9 = FuncGraph::fg_70(%8)    #(Tensor(U8)[28, 28])    # fg_70=L-↓Dense.70 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#107
    %10 = Primitive::Depend{prim_type=1}[side_effect_propagate=I64(1)](%9, %3)    #(Undefined, NoneTypeNoShape) #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#108
    Primitive::Return{prim_type=1}(%10)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/#[CNode]95
}
# order:
#   1: @L-Dense.69:фx_shape{[0]: ValueNode<DoSignaturePrimitive> S-Prim-Shape, [1]: x}
#   2: @L-Dense.69:96{[0]: ValueNode<DoSignaturePrimitive> S-Prim-check_dense_input_shape, [1]: фx_shape, [2]: ValueNode<StringImm> Dense}
#   3: @L-Dense.69:99{[0]: ValueNode<FuncGraph> L-ms_len.98, [1]: фx_shape}
#   4: @L-Dense.69:100{[0]: ValueNode<DoSignaturePrimitive> S-Prim-not_equal, [1]: 99, [2]: ValueNode<Int64Imm> 2}
#   5: @L-Dense.69:102{[0]: ValueNode<FuncGraph> L-bool_.101, [1]: 100}
#   6: @L-Dense.69:105{[0]: ValueNode<Primitive> Switch, [1]: 102, [2]: ValueNode<FuncGraph> L-✓Dense.103, [3]: ValueNode<FuncGraph> L-✗Dense.104}
#   7: @L-Dense.69:106{[0]: 105}
#   8: @L-Dense.69:107{[0]: ValueNode<FuncGraph> L-↓Dense.70, [1]: 106}
#   9: @L-Dense.69:108{[0]: ValueNode<Primitive> Depend, [1]: 107, [2]: 97}
#  10: @L-Dense.69:[CNode]95{[0]: ValueNode<Primitive> Return, [1]: 108}


# [No.8] L-↓Dense.70
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:466/        if len(x_shape) != 2:/
funcgraph fg_70[fg_69](
        %para16 : Tensor(U8)[28, 28]    # фx
    ) {
    %1 : BoolNoShape = FuncGraph::fg_101(Bool(1))    #(BoolNoShape)    # fg_101=L-bool_.101 #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/#109
    %2 : FuncNoShape = Primitive::Switch{prim_type=1}(%1, FuncGraph::fg_71, FuncGraph::fg_110)    #(BoolNoShape, FuncNoShape, FuncNoShape)    # fg_71=L-✓↓Dense.71, fg_110=L-✗↓Dense.110 #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/#111

#------------------------> 7
    %3 = %2() #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/#112
    %4 = FuncGraph::fg_113(%3)    #(Undefined)    # fg_113=L-↓↓Dense.113 #scope: Default/dense_relu_sequential-SequentialCell
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\container.py:278/        for cell in self.cell_list:/#114
    Primitive::Return{prim_type=1}(%4)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/#115
}
# order:
#   1: @L-↓Dense.70:x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-MatMul, [1]: фx, [2]: L-dense_relu_sequential.0.weight}
#   2: @L-↓Dense.70:109{[0]: ValueNode<FuncGraph> L-bool_.101, [1]: ValueNode<BoolImm> true}
#   3: @L-↓Dense.70:111{[0]: ValueNode<Primitive> Switch, [1]: 109, [2]: ValueNode<FuncGraph> L-✓↓Dense.71, [3]: ValueNode<FuncGraph> L-✗↓Dense.110}
#   4: @L-↓Dense.70:112{[0]: 111}
#   5: @L-↓Dense.70:114{[0]: ValueNode<FuncGraph> L-↓↓Dense.113, [1]: 112}
#   6: @L-↓Dense.70:115{[0]: ValueNode<Primitive> Return, [1]: 114}


# [No.9] L-✓↓Dense.71
# In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/
funcgraph fg_71[fg_70](
) {

#------------------------> 8
    %1 = $(L-↓Dense.70):DoSignaturePrimitive::S-Prim-MatMul{prim_type=1}[output_names=["output"], transpose_a=Bool(0), input_names=["x1", "x2"], transpose_x2=Bool(1), transpose_x1=Bool(0), transpose_b=Bool(1)](%para16, %para15)    #(Tensor(U8)[28, 28], Ref[Tensor(F32)][512, 784]) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:468/        x = self.matmul(x, self.weight)/#x
    %2 = DoSignaturePrimitive::S-Prim-BiasAdd{prim_type=1}[output_names=["output"], format="NCHW", input_names=["x", "b"]](%1, %para14)    #(Undefined, Ref[Tensor(F32)][512]) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:470/            x = self.bias_add(x, self.bias)/#x
    Primitive::Return{prim_type=1}(%2)    #(Undefined) #scope: Default/dense_relu_sequential-SequentialCell/0-Dense
      # In file c:\Users\eduardo.guimaraes\Documents\rede_neural\rede-nerural\.venv\lib\site-packages\mindspore\nn\layer\basic.py:469/        if self.has_bias:/#116
}
# order:
#   1: @L-✓↓Dense.71:x{[0]: ValueNode<DoSignaturePrimitive> S-Prim-BiasAdd, [1]: x, [2]: L-dense_relu_sequential.0.bias}
#   2: @L-✓↓Dense.71:116{[0]: ValueNode<Primitive> Return, [1]: x}


#===============================================================================
# num of function graphs in stack: 9/10 (Ignored 1 internal frames).
